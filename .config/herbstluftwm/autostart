#!/usr/bin/env bash

# WORK IN PROGRESS

# this is a simple config for herbstluftwm

hc() {
    herbstclient "$@"
}

hc emit_hook reload

xsetroot -solid '#5A8E3A'

# remove all existing keybindings
hc keyunbind --all


# ===MODKEYS===

### Mod=Mod1   # Use alt 
    Mod=Mod4   # Use meta


# ===SHORTCUTS===

    hc keybind $Mod-Shift-q      quit
    hc keybind $Mod-Shift-r      reload
    hc keybind $Mod-Shift-c      close
    # This will use the `$TERMINAL`; if it fails for some reason, then it uses #
    # xterm or whatever else.                                                  #
    hc keybind $Mod-Shift-Return spawn  "${TERMINAL:-xterm}"


# ===TILING COMBOS===

### hc keybind $Mod-Left        focus left
### hc keybind $Mod-Down        focus down
### hc keybind $Mod-Up          focus up
### hc keybind $Mod-Right       focus right
    hc keybind $Mod-h           focus left
    hc keybind $Mod-j           focus down
    hc keybind $Mod-k           focus up
    hc keybind $Mod-l           focus right


# ===MOVING COMBOS===

    hc keybind $Mod-Shift-h     shift left
    hc keybind $Mod-Shift-j     shift down
    hc keybind $Mod-Shift-k     shift up
    hc keybind $Mod-Shift-l     shift right


# ===FRAME SPLITTING===

    splitstep=0.5

    # Split-bottom
    hc keybind $Mod-s             split bottom  $splitstep

    # Split-right
    hc keybind $Mod-v             split right   $splitstep

    # let the current frame explode into subframes
    hc keybind $Mod-Control-space split explode


# ===RESIZING COMBOS===

    # Resize by 2% by default
    resizestep=0.02
    hc keybind $Mod-Control-h   resize left  +$resizestep
    hc keybind $Mod-Control-j   resize down  +$resizestep
    hc keybind $Mod-Control-k   resize up    +$resizestep
    hc keybind $Mod-Control-l   resize right +$resizestep


# ===TAG STUFFS===

    # This syntax `{1..9}` is short-hand for `{1, 2, 3, 4, 5, 6, 7, 8, 9}`     #
    # The syntax for the second seems to show that whatever key is external of #
    # the brackets will select all of the tags.                                #
    tag_names=( {1..9}   )
    tag_keys=(  {1..9} 0 )

    hc rename default "${tag_names[0]}" || true
    for i in "${!tag_names[@]}" ; do
        hc add "${tag_names[$i]}"
        key="${tag_keys[$i]}"
        if ! [ -z "$key" ] ; then
            hc keybind "$Mod-$key" use_index "$i"
            hc keybind "$Mod-Shift-$key" move_index "$i"
        fi
    done

# ===CYCLE TABS===

### hc keybind $Mod-comma  use_index -1 --skip-visible
### hc keybind $Mod-period use_index +1 --skip-visible
    hc keybind $Mod-Left  use_index -1 --skip-visible
    hc keybind $Mod-Right use_index +1 --skip-visible

# ===INTERFACING WITH WINDOWS===

    # This romoves a window from a frame.                                      #
    hc keybind $Mod-r remove

    hc keybind $Mod-f floating toggle
    hc keybind $Mod-Shift-f fullscreen toggle

    # Unknown at the present moment; assume that it changes only the presently #
    # focused window as floating.                                              #
    hc keybind $Mod-Control-Shift-f set_attr clients.focus.floating toggle

    hc keybind $Mod-Shift-p pseudotile toggle

    # Cyle through all available layout options                                #
    hc keybind $Mod-space                                               \
        or , and . compare tags.focus.curframe_wcount = 2               \
            . cycle_layout +1 vertical horizontal max vertical grid     \
        , cycle_layout +1

# ===MOUSE CONTROLS===

    # INTERFACING

    hc mouseunbind --all
    hc mousebind $Mod-Button1 move
### hc mousebind $Mod-Button2 zoom
    hc mousebind $Mod-Button2 set_attr clients.focus.floating toggle
    hc mousebind $Mod-Button3 resize

    # FOCUS

    hc keybind $Mod-BackSpace   cycle_monitor
    hc keybind $Mod-Tab         cycle_all +1
    hc keybind $Mod-Shift-Tab   cycle_all -1
    hc keybind $Mod-c cycle
    hc keybind $Mod-i jumpto urgent


# ===THEMING===

    hc attr theme.tiling.reset 1
    hc attr theme.floating.reset 1
    hc set frame_border_active_color '#222222'
    hc set frame_border_normal_color '#101010'
    hc set frame_bg_normal_color '#565656'
    hc set frame_bg_active_color '#345F0C'
    hc set frame_border_width 1
    hc set always_show_frame on
    hc set frame_bg_transparent on
    hc set frame_transparent_width 5
    hc set frame_gap 4

    # FRAME THEMING

    # Window Boarders                                                          #
    # Window frames exist in 3 rings.  The primary one is called `boarder`.    #
    # Then, there is an inner one and an outer one, each 1 px thick by de-     #
    # fault:                                                                   #
    #                                                                          #
    #    |outer|boarder|inner|    application    |inner|boarder|outer|         #
    hc attr theme.border_width 2
    hc attr theme.active.color '#005577'
    hc attr theme.normal.color '#454545'


### # Inner
### hc attr theme.inner_width 0
### hc attr theme.inner_color black
### hc attr theme.active.inner_color '#3E4A00' # inner-window frame

    # Outer
    hc attr theme.active.outer_color '#3E4A00'

    hc attr theme.urgent.color orange
    hc attr theme.floating.border_width 2
    hc attr theme.floating.outer_width 0
    hc attr theme.floating.outer_color black
    hc attr theme.background_color '#141414'

    hc set window_gap 5
    hc set frame_padding 0
    hc set smart_window_surroundings off
    hc set smart_frame_surroundings on
    hc set mouse_recenter_gap 0

# rules
hc unrule -F
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

# do multi monitor setup here, e.g.:
# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
# or simply:
# hc detect_monitors

# find the panel
panel=~/.config/herbstluftwm/panel.sh
[ -x "$panel" ] || panel=/etc/xdg/herbstluftwm/panel.sh
for monitor in $(hc list_monitors | cut -d: -f1) ; do
    # start it on each monitor
    "$panel" "$monitor" &
done
