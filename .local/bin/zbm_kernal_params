#!/bin/sh

# AUTHOR:           Mat√æew T. Scarbrough
# COMMENT:          Made for ZFSBootMenu
# DATE:             18 December 2020
# VERSION:          v1.00
# REVISION:         18 December 2020
# REVISION NOTES:   Created base scrip with comments

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -#
#                                                                              #
# This script is made for use with ZFSBootMenu (ZBM), as it is necessary to    #
# set kernel parameters through ZFS as part of ZBM.  This means that any pa-   #
# rameters set through a bootloader only affect the kernel as booted to get to #
# ZBM.  This process is a lot to type, therefore this script is written to     #
# make it quicker and easier.                                                  #
#                                                                              #
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -#

# ===VARIABLES===

    # Root--ZFS properties are inherited, so you don't have to be specific     #
    # like `zroot/ROOT/void.2020.10.30`                                        #
    MY_ZROOT="zroot/ROOT"

### # This may prove needful in the future
### MY_PL_HOSTID=""


    # No need to touch this
    OLD_KERN_PARAMS=$(tr ' ' '\n' < /proc/cmdline | sed "1d")


# ===FUNCTIONS===

    # Helper
    get_help() {

        # INITIAL
        printf "[1mzbm_kernel_params [0m\n\n"

        printf "Written for declaring new and removinge old final kernel boot "
        printf "parameters for\nZFSBootMenu.\n\n"

        # USAGE
        printf "[1;4mUsage[0;1m:[0m\n\n"

        # One-liner
        printf "  zbm_kernel_params [2m\"<boot parameters>\"[0m\n"

        # Interactive Mode
        printf "  zbm_kernel_params [2m[option][0m\n\n"


        # OPTIONS
        printf "[1;4mOptions[0;1m:[0m\n\n"

        # Edit
        printf "  [2m-e[0m        "
        printf "edit the kernel parameters;  uses \`vi\` to edit the parameters"
        printf " list\n"

        # Help
        printf "  [2m-h[0m        "
        printf "meta--prints this menu\n"

        # View
        printf "  [2m-v[0m        "
        printf "view parameters that will be in effect on next reboot\n\n"

        # EDIT
        printf "  [2m--edit[0m    "
        printf "same as [2m-e[0m\n"

        # HELP
        printf "  [2m--help[0m    "
        printf "same as [2m-h[0m\n"

        # VIEW
        printf "  [2m--view[0m    "
        printf "same as [2m-v[0m\n\n"


        # NOTES
        printf "[2;4mNote(s)[0;2m:[0m\n\n"

        printf "By default, the script assumes your zroot is \`zroot/ROOT\`.  "
        printf "If not, please re-\ndefine the vari√§ble \`MY_ZROOT\` accordinl"
        printf "ly.\n"

    }


    # Make TMP dir
    mk_tmp_file() {
        printf '%s' "$OLD_KERN_PARAMS" > /tmp/old_kern_params_tmp
    }


    # Declares new params and deletes tmp files for redundant security purposes
    umk_tmp_file() {

        NEW_KERN_PARAMS=$(tr '\n' ' ' < /tmp/old_kern_params_tmp)

        rm /tmp/old_kern_params_tmp

    }


    # Trunkate
    trunkate_old_kp() {
        printf '%s' "$OLD_KERN_PARAMS" | tr '\n' ' '
    }


    # Use Vi to edit the file containing the old params.  It should go without #
    # saying, but the entent is to add one new param per line, though it is    #
    # unnecessary.                                                             #
    edit_tmp_file() {
        vi /tmp/old_kern_params_tmp && umk_tmp_file
    }


    # View current params
    view_cur_params() {
        zfs get org.zfsbootmenu:commandline "$MY_ZROOT"
    }


    # Set new params
    set_new_params() {
        zfs set org.zfsbootmenu:commandline="$NEW_KERN_PARAMS" "$MY_ZROOT"
    }


    # For reading the line
    read_line_thingy() {

        printf "Enter your kernel parametrs; no double quotes:\n\n"
        printf "[1m>[0m "

        read NEW_KERN_PARAMS

        NEW_KERN_PARAMS="$OLD_KERN_PARAMS $NEW_KERN_PARAMS"

    }


# ===CASES===

    case "$1" in
            -e) mk_tmp_file    &&    edit_tmp_file    &&    set_new_params    ;;
        --edit) mk_tmp_file    &&    edit_tmp_file    &&    set_new_params    ;;
            -h) get_help                                                      ;;
        --help) get_help                                                      ;;
            -v) view_cur_params                                               ;;
        --view) view_cur_params                                               ;;
            "") read_line_thingy             &&             set_new_params    ;;
             *) NEW_KERN_PARAMS="$(trunkate_old_kp) $1" &&  set_new_params    ;;
    esac
